/*
 * This is the bean defines Java Tunes Music item, includes the properties and getters/setters
 * 
 * 	- id: key for bean, system generated number
 * 	- num: CD number
 * 	- title: music item title
 * 	- artist: artist for this music item
 * 	- release date: date for this music item released
 * 	- price: price for this music item
 * 	- version: version for this music item  
 */

package com.javatunes.bean;

import java.util.Date;
import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * This bean connects to database 'item' table
 * @author amifxw0
 *
 */

@Entity
@Table(name = "item")
public class MusicItem implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	// Properties
	
	// Music Item ID - primary key, generated by database
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ItemId")
	private Long id;
	
	// Music item number
	private String num;
	
	// Music item title
	private String title;
	
	// Music item artist
	private String artist;
	
	// Music item release date
	@Temporal(TemporalType.DATE)
	private Date releaseDate;
	
	// Music item list price
	private BigDecimal listPrice;
	
	// Music item price
	private BigDecimal price;

	/**
	 * Constructor without parameters
	 */
	public MusicItem() {
	}

	/**
	 * Constructor with full of properties
	 * @param num
	 * @param title
	 * @param artist
	 * @param releaseDate
	 * @param listPrice
	 * @param price
	 */
	public MusicItem(String num, String title, String artist, Date releaseDate,
			BigDecimal listPrice, BigDecimal price) {
		this.setId(id);
		this.setNum(num);
		this.setTitle(title);
		this.setArtist(artist);
		this.setReleaseDate(releaseDate);
		this.setListPrice(listPrice);
		this.setPrice(price);
	}

	/**
	 * getter for music item id
	 * @return
	 */
	public Long getId() {
		return id;
	}

	/**
	 * getter for music item num
	 * @return
	 */
	public String getNum() {
		return num;
	}

	/**
	 * getter for music item title
	 * @return
	 */
	public String getTitle() {
		return title;
	}

	/**
	 * getter for music item artist
	 * @return
	 */
	public String getArtist() {
		return artist;
	}

	/**
	 * getter for music item release date
	 * @return
	 */
	public Date getReleaseDate() {
		return releaseDate;
	}

	/**
	 * getter for music item list price
	 * @return
	 */
	public BigDecimal getListPrice() {
		return listPrice;
	}

	/**
	 * getter for music item price
	 * @return
	 */
	public BigDecimal getPrice() {
		return price;
	}

	/**
	 * setter for music item id
	 * @param id
	 */
	private void setId(Long id) {
		this.id = id;
	}

	/**
	 * setter for music item num
	 * @param num
	 */
	public void setNum(String num) {
		this.num = num;
	}

	/**
	 * setter for music item title
	 * @param title
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * setter for music item artist
	 * @param artist
	 */
	public void setArtist(String artist) {
		this.artist = artist;
	}

	/**
	 * setter for music item release date
	 * @param release date
	 */
	public void setReleaseDate(Date releaseDate) {
		this.releaseDate = releaseDate;
	}

	/**
	 * setter for music item list price
	 * @param list price
	 */
	public void setListPrice(BigDecimal listPrice) {
		this.listPrice = listPrice;
	}

	/**
	 * setter for music item price
	 * @param price
	 */
	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	/**
	 * Overriding Object.equals() to check if giving object is a instance of Music Item
	 */
	public boolean equals(Object compare) {
		boolean result = false;
		MusicItem other = null;

		if (compare instanceof MusicItem) {
			// cast to MusicItem
			other = (MusicItem) compare;

			// if all the ids are equal, the objects are equal
			result = other.getId().equals(this.getId());
		}
		return result;
	}

	/**
	 * Overriding Object.toString() to print detail information for music item
	 */
	public String toString() {
		return this.getClass().getName() + ": id=" + this.getId() + ": num="
				+ this.getNum() + " title=" + this.getTitle() + " artist="
				+ this.getArtist() + " releaseDate=" + this.getReleaseDate()
				+ " listPrice=" + this.getListPrice() + " price="
				+ this.getPrice();
	}
}
